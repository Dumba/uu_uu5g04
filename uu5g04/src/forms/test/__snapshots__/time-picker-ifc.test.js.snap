// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UU5.Forms.InputMixin interface testing editable(setStatecallback) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={true}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={null}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={true}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing editable(setStatecallback) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getChangeFeedback() 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getFeedBack() 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getFeedBack() 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="success"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="success"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getInputWrapper(inpuid) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getLabel(idinput) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getMessage() 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getValue() should return value 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Enter time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getValue() should return value with seconds props (1.8version) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap uu5-forms-timepicker-seconds"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Enter time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getValue() value is empty. Should return empty string. 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Enter time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isError() 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-error uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="error"
    id={null}
    mainAttrs={null}
    message="Error message"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="error"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isError() 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="success"
    id={null}
    mainAttrs={null}
    message="success message"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="success"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isInitial() should return false 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-error uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="error"
    id={null}
    mainAttrs={null}
    message="Error messagess"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="error"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isInitial() should return true 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isInput() 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Enter time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isLoading() 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isReadOnly() 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isReadOnly() 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={true}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={null}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={true}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isSuccess() first return false, second return true 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="success"
    id={null}
    mainAttrs={null}
    message="This is success message"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="success"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isWarning() 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-warning uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="warning"
    id={null}
    mainAttrs={null}
    message="Warning message"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="warning"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isWarning() 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="success"
    id={null}
    mainAttrs={null}
    message="success message"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="success"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing readOnly(setStatecallback) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing readOnly(setStatecallback) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={true}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={null}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={true}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing reset(setStateCallBack) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="success"
    id={null}
    mainAttrs={null}
    message="New Message"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={true}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="success"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={null}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={true}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing reset(setStateCallBack) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setChangeFeedback() 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-error uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="error"
    id={null}
    mainAttrs={null}
    message="Error message from setChangeFeedback"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="error"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="NaN"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setEditableValue(false, setStateCallback) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setEditableValue(false, setStateCallback) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={true}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={null}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={true}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setEditableValue(true, setStateCallback) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setEditableValue(true, setStateCallback) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setError(message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Full name"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="John Smith"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setError(message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-error uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Full name"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="error"
    id={null}
    mainAttrs={null}
    message="This is error mesage"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="error"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="John Smith"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setFeedBack(feedback, message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setFeedBack(feedback, message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="success"
    id={null}
    mainAttrs={null}
    message="This is valid message."
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="success"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setInitial(msg, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-error uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="error"
    id={null}
    mainAttrs={null}
    message="This input is required"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="error"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setInitial(msg, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message="Initial Message"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setLoading(message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setLoading(message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-loading uu5-forms-input-icon uu5-common-disabled uu5-forms-input-prevent-wrap"
  id="idText"
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="loading"
    id={null}
    mainAttrs={null}
    message="Loading messsagess"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={true}
      elevation={null}
      feedback="loading"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={true}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={null}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="23:00"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setMessage(msg, setStateCallBack) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setMessage(msg, setStateCallBack) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message="New Message"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setSuccess(message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setSuccess(message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="success"
    id={null}
    mainAttrs={null}
    message="This is success message"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="success"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setValue(value,setStateCallBack) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Enter time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setValue(value,setStateCallBack) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Enter time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setWarning(message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setWarning(message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-warning uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="warning"
    id={null}
    mainAttrs={null}
    message="This is warning message"
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="warning"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="23:59"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing focus() 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing focus() 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing getBlurFeedback() 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing isOpen() should return false 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing isTextInput() should return true 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing isValid() 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value="12:30"
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing isValid() should return false 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-error uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={true}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="error"
    id={null}
    mainAttrs={null}
    message="This field is required."
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={true}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="error"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing setAutocompleteItems(items,opt,setStateCallBack) 1`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing setAutocompleteItems(items,opt,setStateCallBack) 2`] = `
<div
  className="uu5-forms-timepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    colorSchema={null}
    content="Enter valid time"
    dynamic={false}
    for="idText-input"
    id={null}
    ignoreInnerHTML={false}
    language={null}
    mainAttrs={null}
    name={null}
    noIndex={false}
    pureRender={false}
    ref_={null}
    required={false}
    style={null}
    tooltip={null}
    tooltipIcon="mdi-information-outline"
    width={null}
  />
  <InputWrapper
    buttons={null}
    className={null}
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    daterangepicker={false}
    datetimepicker={false}
    disabled={false}
    feedback="initial"
    id={null}
    mainAttrs={null}
    message={null}
    name={null}
    noIndex={false}
    pureRender={false}
    readonly={false}
    ref_={null}
    required={false}
    slider={false}
    style={null}
    tooltip={null}
  >
    <text-input
      autoResize={false}
      bgStyle={null}
      borderRadius={null}
      className={null}
      colorSchema={null}
      controlled={true}
      disabled={false}
      elevation={null}
      feedback="initial"
      hidden={false}
      icon="mdi-clock-outline"
      iconClickable={false}
      iconOnClick={null}
      id="idText-input"
      inputWidth={null}
      language={null}
      loading={false}
      mainAttrs={
        Object {
          "autoComplete": "off",
        }
      }
      maxRows={null}
      name="idText-input"
      noIndex={false}
      onBlur={null}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Valid time"
      readonly={false}
      ref_={[Function]}
      rows={null}
      selected={false}
      style={null}
      tooltip={null}
      type="text"
      value=""
    />
    <Popover
      ccrKey={null}
      className={null}
      content={null}
      controlled={true}
      disableBackdrop={true}
      disabled={false}
      dynamic={false}
      fitHeightToViewport={false}
      footer={null}
      forceRender={true}
      header={null}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      level={null}
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      noIndex={false}
      pureRender={false}
      ref_={[Function]}
      selected={false}
      shown={false}
      style={null}
      tooltip={null}
      underline={false}
    />
  </InputWrapper>
</div>
`;
