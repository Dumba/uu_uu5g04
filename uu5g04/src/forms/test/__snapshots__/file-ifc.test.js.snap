// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UU5.Forms.File interface testing addValue(value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.File interface testing addValue(value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-selected"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content="data.json"
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing editable(setStatecallback) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={true}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": null,
            "onClick": null,
            "onFocus": null,
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={true}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content="/etc/networks/interfaces"
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing editable(setStatecallback) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content="/etc/networks/interfaces"
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getChangeFeedback() 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-icon uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getFeedBack() 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getFeedBack() 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-success uu5-forms-input-icon uu5-forms-file-no-value"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="success"
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-green"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="success"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getInputWrapper(inpuid) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content="/etc/networks/interfaces"
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getLabel(idinput) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content="/etc/networks/interfaces"
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getMessage() should return null, second: shoudl return new mesage 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getValue() should return value 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-selected"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content="/etc/networks/interfaces"
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getValue() should return value 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isError() 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-error uu5-forms-input-icon uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="error"
    message="Error message"
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-red"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="error"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isError() 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-success uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="success"
    message="success message"
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-green"
    >
      <items-input
        feedback="success"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          Array [
            <li
              className="uu5-forms-file-item"
            >
              <React.Fragment>
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-item-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-attachment"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
                <Link
                  className="uu5-forms-file-item-name"
                  colorSchema={null}
                  content="/etc/networks/interfaces"
                  controlled={true}
                  disabled={false}
                  download={false}
                  dynamic={false}
                  hidden={false}
                  href={null}
                  id={null}
                  ignoreInnerHTML={false}
                  mainAttrs={
                    Object {
                      "tabIndex": "0",
                    }
                  }
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  offset={0}
                  onClick={null}
                  onCtrlClick={null}
                  onWheelClick={null}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  smoothScroll={1000}
                  style={null}
                  target="_blank"
                  tooltip={null}
                />
              </React.Fragment>
              <Button
                baseline={false}
                bgStyle="transparent"
                borderRadius={null}
                className="uu5-forms-file-close-button"
                colorSchema={null}
                content={null}
                controlled={true}
                disabled={false}
                displayBlock={false}
                dynamic={false}
                elevation={null}
                elevationHover={null}
                hidden={false}
                href={null}
                id={null}
                ignoreInnerHTML={false}
                mainAttrs={null}
                name={null}
                nestingLevel={null}
                noIndex={false}
                offset={0}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                parent={null}
                pressed={false}
                pureRender={false}
                ref_={null}
                selected={false}
                size="m"
                smoothScroll={1000}
                style={null}
                target="_self"
                tooltip={null}
              >
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-close-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-window-close"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
              </Button>
            </li>,
          ]
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isInitial() 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isInitial() 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-error uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="error"
    message="Error messagess"
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-red"
    >
      <items-input
        feedback="error"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content={null}
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isInput() 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isLoading() 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isReadOnly() 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-icon uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isReadOnly() 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={true}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": null,
            "onClick": null,
            "onFocus": null,
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={true}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isSuccess() fisr return false, second return true 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-success uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="success"
    message="This is success message"
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-green"
    >
      <items-input
        feedback="success"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          Array [
            <li
              className="uu5-forms-file-item"
            >
              <React.Fragment>
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-item-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-attachment"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
                <Link
                  className="uu5-forms-file-item-name"
                  colorSchema={null}
                  content="/etc/networks/interfaces"
                  controlled={true}
                  disabled={false}
                  download={false}
                  dynamic={false}
                  hidden={false}
                  href={null}
                  id={null}
                  ignoreInnerHTML={false}
                  mainAttrs={
                    Object {
                      "tabIndex": "0",
                    }
                  }
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  offset={0}
                  onClick={null}
                  onCtrlClick={null}
                  onWheelClick={null}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  smoothScroll={1000}
                  style={null}
                  target="_blank"
                  tooltip={null}
                />
              </React.Fragment>
              <Button
                baseline={false}
                bgStyle="transparent"
                borderRadius={null}
                className="uu5-forms-file-close-button"
                colorSchema={null}
                content={null}
                controlled={true}
                disabled={false}
                displayBlock={false}
                dynamic={false}
                elevation={null}
                elevationHover={null}
                hidden={false}
                href={null}
                id={null}
                ignoreInnerHTML={false}
                mainAttrs={null}
                name={null}
                nestingLevel={null}
                noIndex={false}
                offset={0}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                parent={null}
                pressed={false}
                pureRender={false}
                ref_={null}
                selected={false}
                size="m"
                smoothScroll={1000}
                style={null}
                target="_self"
                tooltip={null}
              >
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-close-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-window-close"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
              </Button>
            </li>,
          ]
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isWarning() 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-warning uu5-forms-input-icon uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="warning"
    message="Warning message"
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-orange"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="warning"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isWarning() 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-success uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="success"
    message="success message"
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-green"
    >
      <items-input
        feedback="success"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          Array [
            <li
              className="uu5-forms-file-item"
            >
              <React.Fragment>
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-item-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-attachment"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
                <Link
                  className="uu5-forms-file-item-name"
                  colorSchema={null}
                  content="/etc/networks/interfaces"
                  controlled={true}
                  disabled={false}
                  download={false}
                  dynamic={false}
                  hidden={false}
                  href={null}
                  id={null}
                  ignoreInnerHTML={false}
                  mainAttrs={
                    Object {
                      "tabIndex": "0",
                    }
                  }
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  offset={0}
                  onClick={null}
                  onCtrlClick={null}
                  onWheelClick={null}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  smoothScroll={1000}
                  style={null}
                  target="_blank"
                  tooltip={null}
                />
              </React.Fragment>
              <Button
                baseline={false}
                bgStyle="transparent"
                borderRadius={null}
                className="uu5-forms-file-close-button"
                colorSchema={null}
                content={null}
                controlled={true}
                disabled={false}
                displayBlock={false}
                dynamic={false}
                elevation={null}
                elevationHover={null}
                hidden={false}
                href={null}
                id={null}
                ignoreInnerHTML={false}
                mainAttrs={null}
                name={null}
                nestingLevel={null}
                noIndex={false}
                offset={0}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                parent={null}
                pressed={false}
                pureRender={false}
                ref_={null}
                selected={false}
                size="m"
                smoothScroll={1000}
                style={null}
                target="_self"
                tooltip={null}
              >
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-close-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-window-close"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
              </Button>
            </li>,
          ]
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing readOnly(setStatecallback) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content="/etc/networks/interfaces"
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing readOnly(setStatecallback) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={true}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": null,
            "onClick": null,
            "onFocus": null,
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={true}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content="/etc/networks/interfaces"
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing reset(setStateCallBack) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-success uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="success"
    message="New Message"
    readonly={true}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-green"
    >
      <items-input
        feedback="success"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": null,
            "onClick": null,
            "onFocus": null,
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={true}
        value={
          Array [
            <li
              className="uu5-forms-file-item"
            >
              <React.Fragment>
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-item-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-attachment"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
                <Link
                  className="uu5-forms-file-item-name"
                  colorSchema={null}
                  content="/etc/networks/interfaces"
                  controlled={true}
                  disabled={false}
                  download={false}
                  dynamic={false}
                  hidden={false}
                  href={null}
                  id={null}
                  ignoreInnerHTML={false}
                  mainAttrs={
                    Object {
                      "tabIndex": "0",
                    }
                  }
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  offset={0}
                  onClick={null}
                  onCtrlClick={null}
                  onWheelClick={null}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  smoothScroll={1000}
                  style={null}
                  target="_blank"
                  tooltip={null}
                />
              </React.Fragment>
            </li>,
          ]
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing reset(setStateCallBack) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-icon uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setChangeFeedback() 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-error uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="error"
    message="Error message from setChangeFeedback"
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-red"
    >
      <items-input
        feedback="error"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          Array [
            <li
              className="uu5-forms-file-item"
            >
              <React.Fragment>
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-item-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-attachment"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
                <Link
                  className="uu5-forms-file-item-name"
                  colorSchema={null}
                  content="/etc/networks/interfaces"
                  controlled={true}
                  disabled={false}
                  download={false}
                  dynamic={false}
                  hidden={false}
                  href={null}
                  id={null}
                  ignoreInnerHTML={false}
                  mainAttrs={
                    Object {
                      "tabIndex": "0",
                    }
                  }
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  offset={0}
                  onClick={null}
                  onCtrlClick={null}
                  onWheelClick={null}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  smoothScroll={1000}
                  style={null}
                  target="_blank"
                  tooltip={null}
                />
              </React.Fragment>
              <Button
                baseline={false}
                bgStyle="transparent"
                borderRadius={null}
                className="uu5-forms-file-close-button"
                colorSchema={null}
                content={null}
                controlled={true}
                disabled={false}
                displayBlock={false}
                dynamic={false}
                elevation={null}
                elevationHover={null}
                hidden={false}
                href={null}
                id={null}
                ignoreInnerHTML={false}
                mainAttrs={null}
                name={null}
                nestingLevel={null}
                noIndex={false}
                offset={0}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                parent={null}
                pressed={false}
                pureRender={false}
                ref_={null}
                selected={false}
                size="m"
                smoothScroll={1000}
                style={null}
                target="_self"
                tooltip={null}
              >
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-close-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-window-close"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
              </Button>
            </li>,
          ]
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setEditableValue(false, setStateCallback) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Filename"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content="/etc/networks/interfaces"
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setEditableValue(false, setStateCallback) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Filename"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={true}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": null,
            "onClick": null,
            "onFocus": null,
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={true}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content="/etc/networks/interfaces"
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setEditableValue(true, setStateCallback) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content="/etc/networks/interfaces"
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setEditableValue(true, setStateCallback) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File name"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          <Link
            className="uu5-forms-file-item-name"
            colorSchema={null}
            content="/etc/networks/interfaces"
            controlled={true}
            disabled={false}
            download={false}
            dynamic={false}
            hidden={false}
            href={null}
            id={null}
            ignoreInnerHTML={false}
            mainAttrs={
              Object {
                "tabIndex": "0",
              }
            }
            name={null}
            nestingLevel={null}
            noIndex={false}
            offset={0}
            onClick={null}
            onCtrlClick={null}
            onWheelClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            smoothScroll={1000}
            style={null}
            target="_blank"
            tooltip={null}
          />
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setError(message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setError(message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-error uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="error"
    message="This is error mesage"
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-red"
    >
      <items-input
        feedback="error"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          Array [
            <li
              className="uu5-forms-file-item"
            >
              <React.Fragment>
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-item-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-attachment"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
                <Link
                  className="uu5-forms-file-item-name"
                  colorSchema={null}
                  content="/etc/networks/interfaces/error"
                  controlled={true}
                  disabled={false}
                  download={false}
                  dynamic={false}
                  hidden={false}
                  href={null}
                  id={null}
                  ignoreInnerHTML={false}
                  mainAttrs={
                    Object {
                      "tabIndex": "0",
                    }
                  }
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  offset={0}
                  onClick={null}
                  onCtrlClick={null}
                  onWheelClick={null}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  smoothScroll={1000}
                  style={null}
                  target="_blank"
                  tooltip={null}
                />
              </React.Fragment>
              <Button
                baseline={false}
                bgStyle="transparent"
                borderRadius={null}
                className="uu5-forms-file-close-button"
                colorSchema={null}
                content={null}
                controlled={true}
                disabled={false}
                displayBlock={false}
                dynamic={false}
                elevation={null}
                elevationHover={null}
                hidden={false}
                href={null}
                id={null}
                ignoreInnerHTML={false}
                mainAttrs={null}
                name={null}
                nestingLevel={null}
                noIndex={false}
                offset={0}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                parent={null}
                pressed={false}
                pureRender={false}
                ref_={null}
                selected={false}
                size="m"
                smoothScroll={1000}
                style={null}
                target="_self"
                tooltip={null}
              >
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-close-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-window-close"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
              </Button>
            </li>,
          ]
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setFeedBack(feedback, message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-icon uu5-forms-file-no-value"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setFeedBack(feedback, message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-success uu5-forms-input-icon uu5-forms-file-selected"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="success"
    message="This is valid message."
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-green"
    >
      <items-input
        feedback="success"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          Array [
            <li
              className="uu5-forms-file-item"
            >
              <React.Fragment>
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-item-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-attachment"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
                <Link
                  className="uu5-forms-file-item-name"
                  colorSchema={null}
                  content="/etc/networks/interfaces"
                  controlled={true}
                  disabled={false}
                  download={false}
                  dynamic={false}
                  hidden={false}
                  href={null}
                  id={null}
                  ignoreInnerHTML={false}
                  mainAttrs={
                    Object {
                      "tabIndex": "0",
                    }
                  }
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  offset={0}
                  onClick={null}
                  onCtrlClick={null}
                  onWheelClick={null}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  smoothScroll={1000}
                  style={null}
                  target="_blank"
                  tooltip={null}
                />
              </React.Fragment>
              <Button
                baseline={false}
                bgStyle="transparent"
                borderRadius={null}
                className="uu5-forms-file-close-button"
                colorSchema={null}
                content={null}
                controlled={true}
                disabled={false}
                displayBlock={false}
                dynamic={false}
                elevation={null}
                elevationHover={null}
                hidden={false}
                href={null}
                id={null}
                ignoreInnerHTML={false}
                mainAttrs={null}
                name={null}
                nestingLevel={null}
                noIndex={false}
                offset={0}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                parent={null}
                pressed={false}
                pureRender={false}
                ref_={null}
                selected={false}
                size="m"
                smoothScroll={1000}
                style={null}
                target="_self"
                tooltip={null}
              >
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-close-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-window-close"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
              </Button>
            </li>,
          ]
        }
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setInitial(msg, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-error uu5-forms-input-icon uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="error"
    message="This input is required"
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-red"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="error"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setInitial(msg, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    message="Initial Message"
    readonly={false}
    ref_={[Function]}
    required={true}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          Array [
            <li
              className="uu5-forms-file-item"
            >
              <React.Fragment>
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-item-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-attachment"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
                <Link
                  className="uu5-forms-file-item-name"
                  colorSchema={null}
                  content="/etc/networks/interfaces/initial"
                  controlled={true}
                  disabled={false}
                  download={false}
                  dynamic={false}
                  hidden={false}
                  href={null}
                  id={null}
                  ignoreInnerHTML={false}
                  mainAttrs={
                    Object {
                      "tabIndex": "0",
                    }
                  }
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  offset={0}
                  onClick={null}
                  onCtrlClick={null}
                  onWheelClick={null}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  smoothScroll={1000}
                  style={null}
                  target="_blank"
                  tooltip={null}
                />
              </React.Fragment>
              <Button
                baseline={false}
                bgStyle="transparent"
                borderRadius={null}
                className="uu5-forms-file-close-button"
                colorSchema={null}
                content={null}
                controlled={true}
                disabled={false}
                displayBlock={false}
                dynamic={false}
                elevation={null}
                elevationHover={null}
                hidden={false}
                href={null}
                id={null}
                ignoreInnerHTML={false}
                mainAttrs={null}
                name={null}
                nestingLevel={null}
                noIndex={false}
                offset={0}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                parent={null}
                pressed={false}
                pureRender={false}
                ref_={null}
                selected={false}
                size="m"
                smoothScroll={1000}
                style={null}
                target="_self"
                tooltip={null}
              >
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-close-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-window-close"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
              </Button>
            </li>,
          ]
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setLoading(message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Full name"
    for="id1-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setLoading(message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-loading uu5-forms-input-icon uu5-common-disabled uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Full name"
    for="id1-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="loading"
    message="Loading messsagess"
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        disabled={true}
        feedback="loading"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        loading={true}
        mainAttrs={
          Object {
            "onBlur": null,
            "onClick": null,
            "onFocus": null,
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          Array [
            <li
              className="uu5-forms-file-item"
            >
              <React.Fragment>
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-item-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-attachment"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
                <Link
                  className="uu5-forms-file-item-name"
                  colorSchema={null}
                  content="/etc/networks/interfaces"
                  controlled={true}
                  disabled={false}
                  download={false}
                  dynamic={false}
                  hidden={false}
                  href={null}
                  id={null}
                  ignoreInnerHTML={false}
                  mainAttrs={
                    Object {
                      "tabIndex": "0",
                    }
                  }
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  offset={0}
                  onClick={null}
                  onCtrlClick={null}
                  onWheelClick={null}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  smoothScroll={1000}
                  style={null}
                  target="_blank"
                  tooltip={null}
                />
              </React.Fragment>
              <Button
                baseline={false}
                bgStyle="transparent"
                borderRadius={null}
                className="uu5-forms-file-close-button"
                colorSchema={null}
                content={null}
                controlled={true}
                disabled={false}
                displayBlock={false}
                dynamic={false}
                elevation={null}
                elevationHover={null}
                hidden={false}
                href={null}
                id={null}
                ignoreInnerHTML={false}
                mainAttrs={null}
                name={null}
                nestingLevel={null}
                noIndex={false}
                offset={0}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                parent={null}
                pressed={false}
                pureRender={false}
                ref_={null}
                selected={false}
                size="m"
                smoothScroll={1000}
                style={null}
                target="_self"
                tooltip={null}
              >
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-close-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-window-close"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
              </Button>
            </li>,
          ]
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": null,
          }
        }
        onBlur={null}
        onClick={[Function]}
        onFocus={null}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setMessage(msg, setStateCallBack) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setMessage(msg, setStateCallBack) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    message="New Message"
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setSuccess(message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File"
    for="id1-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setSuccess(message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-success uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File"
    for="id1-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="success"
    message="This is success message"
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-green"
    >
      <items-input
        feedback="success"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          Array [
            <li
              className="uu5-forms-file-item"
            >
              <React.Fragment>
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-item-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-attachment"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
                <Link
                  className="uu5-forms-file-item-name"
                  colorSchema={null}
                  content="/etc/networks/interfaces"
                  controlled={true}
                  disabled={false}
                  download={false}
                  dynamic={false}
                  hidden={false}
                  href={null}
                  id={null}
                  ignoreInnerHTML={false}
                  mainAttrs={
                    Object {
                      "tabIndex": "0",
                    }
                  }
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  offset={0}
                  onClick={null}
                  onCtrlClick={null}
                  onWheelClick={null}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  smoothScroll={1000}
                  style={null}
                  target="_blank"
                  tooltip={null}
                />
              </React.Fragment>
              <Button
                baseline={false}
                bgStyle="transparent"
                borderRadius={null}
                className="uu5-forms-file-close-button"
                colorSchema={null}
                content={null}
                controlled={true}
                disabled={false}
                displayBlock={false}
                dynamic={false}
                elevation={null}
                elevationHover={null}
                hidden={false}
                href={null}
                id={null}
                ignoreInnerHTML={false}
                mainAttrs={null}
                name={null}
                nestingLevel={null}
                noIndex={false}
                offset={0}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                parent={null}
                pressed={false}
                pureRender={false}
                ref_={null}
                selected={false}
                size="m"
                smoothScroll={1000}
                style={null}
                target="_self"
                tooltip={null}
              >
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-close-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-window-close"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
              </Button>
            </li>,
          ]
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setValue(value,setStateCallBack) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setValue(value,setStateCallBack) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-selected"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Upload file"
    for="uuID-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        feedback="initial"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="uuID-input"
        inputWidth={null}
        key="uuID-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="uuID-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          Array [
            <li
              className="uu5-forms-file-item"
            >
              <React.Fragment>
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-item-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-attachment"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
                <Link
                  className="uu5-forms-file-item-name"
                  colorSchema={null}
                  content="/etc/networks/interfaces"
                  controlled={true}
                  disabled={false}
                  download={false}
                  dynamic={false}
                  hidden={false}
                  href={null}
                  id={null}
                  ignoreInnerHTML={false}
                  mainAttrs={
                    Object {
                      "tabIndex": "0",
                    }
                  }
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  offset={0}
                  onClick={null}
                  onCtrlClick={null}
                  onWheelClick={null}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  smoothScroll={1000}
                  style={null}
                  target="_blank"
                  tooltip={null}
                />
              </React.Fragment>
              <Button
                baseline={false}
                bgStyle="transparent"
                borderRadius={null}
                className="uu5-forms-file-close-button"
                colorSchema={null}
                content={null}
                controlled={true}
                disabled={false}
                displayBlock={false}
                dynamic={false}
                elevation={null}
                elevationHover={null}
                hidden={false}
                href={null}
                id={null}
                ignoreInnerHTML={false}
                mainAttrs={null}
                name={null}
                nestingLevel={null}
                noIndex={false}
                offset={0}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                parent={null}
                pressed={false}
                pureRender={false}
                ref_={null}
                selected={false}
                size="m"
                smoothScroll={1000}
                style={null}
                target="_self"
                tooltip={null}
              >
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-close-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-window-close"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
              </Button>
            </li>,
          ]
        }
      />
      <input
        className="uu5-forms-file-input"
        id="uuID-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setWarning(message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-file-no-value"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row"
    >
      <items-input
        className="uu5-forms-file-placeholder"
        feedback="initial"
        icon="mdi-cloud-upload"
        iconClassName="uu5-forms-file-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": [Function],
            "onFocus": [Function],
            "tabIndex": "0",
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
    </Div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setWarning(message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-file uu5-forms-input uu5-forms-input-m uu5-forms-input-warning uu5-forms-input-icon uu5-forms-file-selected"
  id="id1"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="File label"
    for="id1-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="warning"
    message="This is warning message"
    readonly={false}
    ref_={[Function]}
  >
    <Div
      className="uu5-forms-file-input-row color-schema-orange"
    >
      <items-input
        feedback="warning"
        icon="mdi-attachment"
        iconClassName="uu5-forms-file-item-icon"
        id="id1-input"
        inputWidth={null}
        key="id1-input"
        mainAttrs={
          Object {
            "onBlur": [Function],
            "onClick": null,
            "onFocus": [Function],
            "tabIndex": null,
          }
        }
        name="id1-input"
        onItemClick={[Function]}
        readonly={false}
        value={
          Array [
            <li
              className="uu5-forms-file-item"
            >
              <React.Fragment>
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-item-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-attachment"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
                <Link
                  className="uu5-forms-file-item-name"
                  colorSchema={null}
                  content="/etc/networks/interfaces/warning"
                  controlled={true}
                  disabled={false}
                  download={false}
                  dynamic={false}
                  hidden={false}
                  href={null}
                  id={null}
                  ignoreInnerHTML={false}
                  mainAttrs={
                    Object {
                      "tabIndex": "0",
                    }
                  }
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  offset={0}
                  onClick={null}
                  onCtrlClick={null}
                  onWheelClick={null}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  smoothScroll={1000}
                  style={null}
                  target="_blank"
                  tooltip={null}
                />
              </React.Fragment>
              <Button
                baseline={false}
                bgStyle="transparent"
                borderRadius={null}
                className="uu5-forms-file-close-button"
                colorSchema={null}
                content={null}
                controlled={true}
                disabled={false}
                displayBlock={false}
                dynamic={false}
                elevation={null}
                elevationHover={null}
                hidden={false}
                href={null}
                id={null}
                ignoreInnerHTML={false}
                mainAttrs={null}
                name={null}
                nestingLevel={null}
                noIndex={false}
                offset={0}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                parent={null}
                pressed={false}
                pureRender={false}
                ref_={null}
                selected={false}
                size="m"
                smoothScroll={1000}
                style={null}
                target="_self"
                tooltip={null}
              >
                <Icon
                  authenticate={false}
                  className="uu5-forms-file-close-icon"
                  clickable={true}
                  controlled={true}
                  disabled={false}
                  hidden={false}
                  icon="mdi-window-close"
                  id={null}
                  mainAttrs={null}
                  name={null}
                  nestingLevel={null}
                  noIndex={false}
                  parent={null}
                  pureRender={false}
                  ref_={null}
                  selected={false}
                  src=""
                  style={null}
                  tooltip={null}
                />
              </Button>
            </li>,
          ]
        }
      />
      <input
        className="uu5-forms-file-input"
        id="id1-file"
        key="fileinput"
        multiple={false}
        onChange={[Function]}
        type="file"
        value=""
      />
      <Button
        bgStyle="transparent"
        className="uu5-forms-file-close-button"
        mainAttrs={
          Object {
            "tabIndex": "0",
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
      >
        <Icon
          className="uu5-forms-file-close-icon"
          icon="mdi-window-close"
        />
      </Button>
    </Div>
  </InputWrapper>
</div>
`;
