// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UU5.Forms.DateTimePicker interface testing close(setStateCallBack) should close calendar 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID01"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Date of appointment"
    for="uuID01-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="uuID01-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="1/1/2019"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="uuID01-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.DateTimePicker interface testing close(setStateCallBack) should close calendar 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap uu5-forms-datepicker-open"
  id="uuID01"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Date of appointment"
    for="uuID01-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="uuID01-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="1/1/2019"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="uuID01-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper uu5-forms-datetimepicker-popover-wrapper-date"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
        shown={true}
      >
        <Calendar
          className="uu5-forms-input-menu"
          id="uuID01-date-picker"
          onChange={[Function]}
          value={2018-12-31T23:00:00.000Z}
        />
      </Popover>
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.DateTimePicker interface testing close(setStateCallBack) should close calendar 3`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID01"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Date of appointment"
    for="uuID01-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="uuID01-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="1/1/2019"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="uuID01-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.DateTimePicker interface testing close(setStateCallBack) should close time 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID01"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Date of appointment"
    for="uuID01-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="uuID01-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="1/1/2019"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="uuID01-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.DateTimePicker interface testing close(setStateCallBack) should close time 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap uu5-forms-timepicker-open"
  id="uuID01"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Date of appointment"
    for="uuID01-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="uuID01-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="1/1/2019"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="uuID01-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper uu5-forms-datetimepicker-popover-wrapper-time"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
        shown={true}
      >
        <Time
          className="uu5-forms-input-menu"
          horizontalOnly={false}
          id="uuID01-time-picker"
          onChange={[Function]}
          seconds={false}
          value={
            Object {
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            }
          }
        />
      </Popover>
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.DateTimePicker interface testing close(setStateCallBack) should close time 3`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID01"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Date of appointment"
    for="uuID01-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="uuID01-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="1/1/2019"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="uuID01-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.DateTimePicker interface testing openCalendar(setStateCallBack) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID01"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Date of appointment"
    for="uuID01-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="uuID01-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="1/1/2019"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="uuID01-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.DateTimePicker interface testing openCalendar(setStateCallBack) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap uu5-forms-datepicker-open"
  id="uuID01"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Date of appointment"
    for="uuID01-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="uuID01-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="1/1/2019"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="uuID01-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper uu5-forms-datetimepicker-popover-wrapper-date"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
        shown={true}
      >
        <Calendar
          className="uu5-forms-input-menu"
          id="uuID01-date-picker"
          onChange={[Function]}
          value={2018-12-31T23:00:00.000Z}
        />
      </Popover>
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.DateTimePicker interface testing openTime(setStateCallBack) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID01"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Date of appointment"
    for="uuID01-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="uuID01-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="1/1/2019"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="uuID01-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.DateTimePicker interface testing openTime(setStateCallBack) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap uu5-forms-timepicker-open"
  id="uuID01"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Date of appointment"
    for="uuID01-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="uuID01-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="1/1/2019"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="uuID01-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="uuID01-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper uu5-forms-datetimepicker-popover-wrapper-time"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
        shown={true}
      >
        <Time
          className="uu5-forms-input-menu"
          horizontalOnly={false}
          id="uuID01-time-picker"
          onChange={[Function]}
          seconds={false}
          value={
            Object {
              "hours": 0,
              "minutes": 0,
              "seconds": 0,
            }
          }
        />
      </Popover>
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing editable(setStatecallback) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={true}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={true}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onKeyDown={[Function]}
        readonly={true}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing editable(setStatecallback) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getChangeFeedback() 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getFeedBack() 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getFeedBack() 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="success"
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="success"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="success"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getInputWrapper(inpuid) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getLabel(idinput) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getMessage() 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getValue() should return value 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap uu5-forms-datetimepicker-seconds"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Enter time"
        readonly={false}
        ref_={[Function]}
        value="8/2/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input uu5-forms-time-input-seconds"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="10:00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getValue() should return value 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap uu5-forms-datetimepicker-seconds"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Enter time"
        readonly={false}
        ref_={[Function]}
        value="8/2/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input uu5-forms-time-input-seconds"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="10:00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing getValue() should return value 3`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap uu5-forms-datetimepicker-seconds"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Enter time"
        readonly={false}
        ref_={[Function]}
        value="8/2/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input uu5-forms-time-input-seconds"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="10:00:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isError() 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-error uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="error"
    message="Error message"
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="error"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="Error message"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="error"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="Error message"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isError() 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="success"
    message="success message"
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="success"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="success message"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="success"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="success message"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isInitial() shoud return true 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isInitial() should return false 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-error uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="error"
    message="Error messagess"
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="error"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="Error messagess"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="error"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="Error messagess"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isInput() 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Enter time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isLoading() 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isReadOnly() 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isReadOnly() 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={true}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={true}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onKeyDown={[Function]}
        readonly={true}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isSuccess() fisr return false, second return true 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="success"
    message="This is success message"
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="success"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="This is success message"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="success"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="This is success message"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isWarning() 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-warning uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="warning"
    message="Warning message"
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="warning"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="Warning message"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="warning"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="Warning message"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing isWarning() 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="success"
    message="success message"
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="success"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="success message"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="success"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="success message"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing readOnly(setStatecallback) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing readOnly(setStatecallback) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={true}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={true}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onKeyDown={[Function]}
        readonly={true}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing reset(setStateCallBack) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="success"
    message="New Message"
    readonly={true}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="success"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
          }
        }
        message="New Message"
        name="idText-date-input"
        onChange={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={true}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="success"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
          }
        }
        message="New Message"
        name="idText-time-input"
        onChange={[Function]}
        onKeyDown={[Function]}
        readonly={true}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing reset(setStateCallBack) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setChangeFeedback() 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="success"
    message="Success message from setChangeFeedback"
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="success"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="Success message from setChangeFeedback"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="success"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="Success message from setChangeFeedback"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setEditableValue(false, setStateCallback) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setEditableValue(false, setStateCallback) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={true}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={true}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onKeyDown={[Function]}
        readonly={true}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setEditableValue(true, setStateCallback) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setEditableValue(true, setStateCallback) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setError(message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Full name"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="John Smith"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setError(message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-error uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Full name"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="error"
    message="This is error mesage"
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="error"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="This is error mesage"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="John Smith"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="error"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="This is error mesage"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setFeedBack(feedback, message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setFeedBack(feedback, message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="success"
    message="This is valid message."
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="success"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="This is valid message."
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="success"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="This is valid message."
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setInitial(msg, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-error uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="error"
    message="This input is required"
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="error"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="This input is required"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="error"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="This input is required"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setInitial(msg, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    message="Initial Message"
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="Initial Message"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="Initial Message"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setLoading(message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setLoading(message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-loading uu5-forms-input-icon uu5-common-disabled uu5-forms-input-prevent-wrap"
  id="idText"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="loading"
    message="Loading messsagess"
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        disabled={true}
        feedback="loading"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        loading={true}
        mainAttrs={
          Object {
            "autoComplete": "off",
          }
        }
        message="Loading messsagess"
        name="idText-date-input"
        onChange={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        disabled={true}
        feedback="loading"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        loading={true}
        mainAttrs={
          Object {
            "autoComplete": "off",
          }
        }
        message="Loading messsagess"
        name="idText-time-input"
        onChange={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setMessage(msg, setStateCallBack) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setMessage(msg, setStateCallBack) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    message="New Message"
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="New Message"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="New Message"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setSuccess(message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setSuccess(message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="success"
    message="This is success message"
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="success"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="This is success message"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="success"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="This is success message"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setValue(value,setStateCallBack) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Enter time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setValue(value,setStateCallBack) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Enter time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="10:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setWarning(message, value, setStateCallBack) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.InputMixin interface testing setWarning(message, value, setStateCallBack) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-warning uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    feedback="warning"
    message="This is warning message"
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="warning"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="This is warning message"
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="warning"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message="This is warning message"
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing focus() 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing focus() 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing getBlurFeedback() 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing isOpen() should return false 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing isTextInput() should return true 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing isValid() 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
    required={true}
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
    required={true}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
        value="9/11/2013"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
        value="12:00"
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing setAutocompleteItems(items,opt,setStateCallBack) 1`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.TextInputMixin interface testing setAutocompleteItems(items,opt,setStateCallBack) 2`] = `
<div
  className="uu5-forms-datetimepicker uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="idText"
  onClick={[Function]}
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Enter valid time"
    for="idText-date-input"
  />
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    datetimepicker={true}
    disabled={false}
    readonly={false}
  >
    <div
      className="uu5-forms-datetimepicker-date-wrapper"
      key="1"
    >
      <text-input
        className="uu5-forms-date-input"
        feedback="initial"
        icon="mdi-calendar"
        iconClickable={false}
        id="idText-date-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-date-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Valid time"
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-time-wrapper"
      key="2"
    >
      <text-input
        className="uu5-forms-time-input"
        feedback="initial"
        icon="mdi-clock-outline"
        iconClickable={false}
        id="idText-time-input"
        mainAttrs={
          Object {
            "autoComplete": "off",
            "onClick": [Function],
          }
        }
        message={null}
        name="idText-time-input"
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        readonly={false}
        ref_={[Function]}
      />
    </div>
    <div
      className="uu5-forms-datetimepicker-popover-wrapper"
      key="3"
    >
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
      <Popover
        disableBackdrop={true}
        forceRender={true}
        ref_={[Function]}
      />
    </div>
  </InputWrapper>
</div>
`;
